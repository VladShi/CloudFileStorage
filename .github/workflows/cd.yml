name: CD pipeline

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонируем репозиторий
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг 2: Устанавливаем JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Шаг 3: Собираем проект с помощью Maven
      - name: Build with Maven
        run: ./mvnw clean package -DskipTests

      # Шаг 4: Копируем JAR-файл и docker-compose.yml на сервер
      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "target/cloud-file-storage-0.0.1-SNAPSHOT.jar,docker-compose.yml"
          target: "/home/deploy/"

      # Шаг 5: Создаём файл .env на сервере
      - name: Create .env file on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" > /home/deploy/.env
            echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> /home/deploy/.env
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> /home/deploy/.env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> /home/deploy/.env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> /home/deploy/.env
            echo "MINIO_ENDPOINT=${{ secrets.MINIO_ENDPOINT }}" >> /home/deploy/.env
            echo "MINIO_ROOT_USER=${{ secrets.MINIO_ROOT_USER }}" >> /home/deploy/.env
            echo "MINIO_ROOT_PASSWORD=${{ secrets.MINIO_ROOT_PASSWORD }}" >> /home/deploy/.env
            echo "MINIO_BUCKET_USERS=${{ secrets.MINIO_BUCKET_USERS }}" >> /home/deploy/.env
            echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> /home/deploy/.env
            echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> /home/deploy/.env
            echo "REDIS_PASSWORD=${{ secrets.PASSWORD }}" >> /home/deploy/.env

      # Шаг 6: Развёртываем контейнеры
      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/deploy
            docker-compose down
            docker-compose up -d

      # Шаг 7: Перезапускаем Spring Boot приложение
      - name: Restart Spring Boot application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          # Ждём 70 секунд, чтобы базы данных успели запуститься
          script: |
            sleep 70
            sudo systemctl restart cloud-file-storage
